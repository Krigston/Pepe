// –ö–ª–∞—Å—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram WebApp API
export class TelegramWebApp {
    private static tg: any = null;

    static init(): void {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Telegram WebApp API
        if (typeof window !== 'undefined' && (window as any).Telegram?.WebApp) {
            this.tg = (window as any).Telegram.WebApp;
            console.log('üì± Telegram WebApp API –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            console.log('üîç Telegram –≤–µ—Ä—Å–∏—è:', this.tg.version);
            console.log('üîç Telegram –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞:', this.tg.platform);
            
            // –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ —Ä–∞—Å—à–∏—Ä—è–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω
            if (this.tg.expand) {
                this.tg.expand();
                console.log('üì∫ Telegram: expand() –≤—ã–∑–≤–∞–Ω');
            }
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞
            if (this.tg.setHeaderColor) {
                this.tg.setHeaderColor('#667eea');
            }
            
            // –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –ø—Ä–æ–±—É–µ–º –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º
            this.requestFullscreenLandscape();
            
            // –ò –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É
            setTimeout(() => {
                this.requestFullscreenLandscape();
            }, 100);
            
            // –ò –µ—â–µ —Ä–∞–∑ —Å –±–æ–ª—å—à–µ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
            setTimeout(() => {
                this.requestFullscreenLandscape();
            }, 1000);
            
            console.log('üéØ Telegram WebApp –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
        } else {
            console.log('‚ÑπÔ∏è Telegram WebApp API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–∑–∞–ø—É—Å–∫ –≤–Ω–µ Telegram)');
            
            // –ü—Ä–æ–±—É–µ–º –ø–æ–¥–æ–∂–¥–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏
            setTimeout(() => {
                if ((window as any).Telegram?.WebApp) {
                    console.log('üîÑ Telegram WebApp API –∑–∞–≥—Ä—É–∂–µ–Ω —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π');
                    this.init();
                }
            }, 1000);
        }
    }

    static isTelegramWebApp(): boolean {
        return this.tg !== null;
    }

    static async requestFullscreenLandscape(): Promise<boolean> {
        if (!this.tg) {
            console.log('‚ùå Telegram WebApp –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
            return false;
        }

        try {
            console.log('üîç –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–µ—Ç–æ–¥—ã Telegram:', Object.keys(this.tg));
            console.log('üì± –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:', this.tg.platform);
            console.log('üì± –í–µ—Ä—Å–∏—è Telegram:', this.tg.version);
            
            // –ê–¥–∞–ø—Ç–∏—Ä—É–µ–º –∏–≥—Ä—É –ø–æ–¥ –º–æ–±–∏–ª—å–Ω—ã–π —Ä–µ–∂–∏–º
            this.ensureLandscapeMode();

            // –ë–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram
            if (this.tg.expand) {
                this.tg.expand();
                console.log('üì∫ Telegram: expand() –≤—ã–ø–æ–ª–Ω–µ–Ω');
            }

            if (this.tg.enableClosingConfirmation) {
                this.tg.enableClosingConfirmation();
                console.log('‚úÖ Telegram: –í–∫–ª—é—á–µ–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–∏—è');
            }

            return true;
        } catch (error) {
            console.log('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞ Telegram WebApp:', error);
            return false;
        }
    }

    // –ü—Ä–æ—Å—Ç–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è –∏–≥—Ä—ã –ø–æ–¥ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º
    static ensureLandscapeMode(): void {
        console.log('üéÆ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–π –∏–≥—Ä—ã');
        
        // –£–±–∏—Ä–∞–µ–º –≤—Å–µ CSS –ø–æ–≤–æ—Ä–æ—Ç–∞ –∫–æ—Ç–æ—Ä—ã–µ –ª–æ–º–∞—é—Ç –∏–≥—Ä—É
        document.body.classList.remove('force-landscape');
        const oldStyle = document.getElementById('force-landscape-style');
        if (oldStyle) oldStyle.remove();
        
        // –ê–¥–∞–ø—Ç–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä—ã canvas –ø–æ–¥ –º–æ–±–∏–ª—å–Ω—ã–π –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º
        this.adaptCanvasForMobile();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –¥–ª—è –ø–æ—Ä—Ç—Ä–µ—Ç–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
        this.showOrientationHint();
    }

    static adaptCanvasForMobile(): void {
        const canvas = document.getElementById('gameCanvas') as HTMLCanvasElement;
        if (!canvas) return;

        const isPortrait = window.innerHeight > window.innerWidth;
        
        if (isPortrait) {
            // –í –ø–æ—Ä—Ç—Ä–µ—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ –¥–µ–ª–∞–µ–º canvas —à–∏—Ä–µ –Ω–æ –∫–æ—Ä–æ—á–µ
            canvas.style.width = '100vw';
            canvas.style.height = '60vh';
            console.log('üì± Canvas –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω –ø–æ–¥ –ø–æ—Ä—Ç—Ä–µ—Ç–Ω—ã–π —Ä–µ–∂–∏–º');
        } else {
            // –í –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª–Ω—ã–π —ç–∫—Ä–∞–Ω
            canvas.style.width = '100vw';
            canvas.style.height = '100vh';
            console.log('üì± Canvas –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω –ø–æ–¥ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º');
        }
    }

    static showOrientationHint(): void {
        const isPortrait = window.innerHeight > window.innerWidth;
        
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        const oldHint = document.getElementById('orientation-hint');
        if (oldHint) oldHint.remove();
        
        if (isPortrait) {
            const hint = document.createElement('div');
            hint.id = 'orientation-hint';
            hint.style.cssText = `
                position: fixed;
                top: 10px;
                left: 50%;
                transform: translateX(-50%);
                background: rgba(0,0,0,0.8);
                color: white;
                padding: 8px 16px;
                border-radius: 20px;
                font-size: 12px;
                z-index: 1000;
                text-align: center;
            `;
            hint.innerHTML = 'üì± –ü–æ–≤–µ—Ä–Ω–∏—Ç–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –¥–ª—è –ª—É—á—à–µ–≥–æ –∏–≥—Ä–æ–≤–æ–≥–æ –æ–ø—ã—Ç–∞';
            document.body.appendChild(hint);
            
            // –£–±–∏—Ä–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
            setTimeout(() => {
                if (hint.parentNode) hint.remove();
            }, 5000);
        }
    }

    static isFullscreen(): boolean {
        return this.tg?.isFullscreen || false;
    }

    static exitFullscreen(): void {
        if (this.tg?.exitFullscreen) {
            this.tg.exitFullscreen();
            console.log('üö™ Telegram: –í—ã—Ö–æ–¥ –∏–∑ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞');
        }
    }

    static onFullscreenChanged(callback: (isFullscreen: boolean) => void): void {
        if (this.tg) {
            this.tg.onEvent('fullscreenChanged', callback);
        }
    }

    static onOrientationChanged(callback: () => void): void {
        if (this.tg) {
            this.tg.onEvent('orientationChanged', callback);
        }
    }



    static close(): void {
        if (this.tg) {
            this.tg.close();
        }
    }

    static ready(): void {
        if (this.tg) {
            this.tg.ready();
        }
    }
}
