// –ö–ª–∞—Å—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram WebApp API
export class TelegramWebApp {
    private static tg: any = null;

    static init(): void {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Telegram WebApp API
        if (typeof window !== 'undefined' && (window as any).Telegram?.WebApp) {
            this.tg = (window as any).Telegram.WebApp;
            console.log('üì± Telegram WebApp API –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            
            // –†–∞—Å—à–∏—Ä—è–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω
            this.tg.expand();
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞
            this.tg.setHeaderColor('#667eea');
            
            console.log('üéØ Telegram WebApp –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
        } else {
            console.log('‚ÑπÔ∏è Telegram WebApp API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–∑–∞–ø—É—Å–∫ –≤–Ω–µ Telegram)');
        }
    }

    static isTelegramWebApp(): boolean {
        return this.tg !== null;
    }

    static async requestFullscreenLandscape(): Promise<boolean> {
        if (!this.tg) {
            console.log('‚ùå Telegram WebApp –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
            return false;
        }

        try {
            // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º
            if (this.tg.requestFullscreen) {
                await this.tg.requestFullscreen();
                console.log('üì∫ Telegram: –ü–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω');
            }

            // –ë–ª–æ–∫–∏—Ä—É–µ–º –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—é –≤ landscape
            if (this.tg.lockOrientation) {
                await this.tg.lockOrientation('landscape');
                console.log('üîí Telegram: –û—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –≤ landscape');
                return true;
            }

            console.log('‚ö†Ô∏è Telegram: lockOrientation –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
            return false;
        } catch (error) {
            console.log('‚ùå –û—à–∏–±–∫–∞ Telegram WebApp:', error);
            return false;
        }
    }

    static isFullscreen(): boolean {
        return this.tg?.isFullscreen || false;
    }

    static exitFullscreen(): void {
        if (this.tg?.exitFullscreen) {
            this.tg.exitFullscreen();
            console.log('üö™ Telegram: –í—ã—Ö–æ–¥ –∏–∑ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞');
        }
    }

    static onFullscreenChanged(callback: (isFullscreen: boolean) => void): void {
        if (this.tg) {
            this.tg.onEvent('fullscreenChanged', callback);
        }
    }

    static onOrientationChanged(callback: () => void): void {
        if (this.tg) {
            this.tg.onEvent('orientationChanged', callback);
        }
    }

    static close(): void {
        if (this.tg) {
            this.tg.close();
        }
    }

    static ready(): void {
        if (this.tg) {
            this.tg.ready();
        }
    }
}
